---
# tasks file for elastic

- name: include secrets
  include_vars: "{{ item }}"
  no_log: true
  with_items:
    - "{{ inventory_dir }}/vars.yml"
    - "{{ inventory_dir }}/vault.yml"
    - "{{ inventory_dir }}/vault_files/efk.yml"
  ignore_errors: True
  tags: always


- name: main | set sysctl params
  sysctl:
    name: vm.max_map_count
    value: 262144
    sysctl_set: yes
    state: present
    reload: yes

- name: main | create project dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "1000"
    recurse: yes
  with_items:
    - "{{ elastic_project_directory }}"
    - "{{ elastic_project_directory }}/data"

- name: main | template project
  template:
    src: "{{ item.src }}"
    dest: "{{ elastic_project_directory }}/{{ item.dest }}"
  with_items:
    - {src: "docker-compose.yml.j2", dest: "docker-compose.yml"}
    - {src: "internal_users.yml.j2", dest: "internal_users.yml"}
    - {src: "roles.yml.j2", dest: "roles.yml"}

- name: main | Running elastic
  docker_compose:
    project_src: "{{ elastic_project_directory }}"
    project_name: "{{ elastic_project_name }}"
    pull: yes
    restarted: yes
  register: output

- debug:
    var: output

- name: main | Wait elastic
  wait_for:
    host: localhost
    port: 9300

- name: main | Update users
  shell: "cd {{ elastic_project_directory }} && docker-compose exec -T elastic sh -c '/bin/bash securityadmin_demo.sh' "
